export const processAI = (prompt, message, to_phone) => {
  console.log("AI PROCESS:");
  cp.exec(
      `./llama.cpp/main -ngl 32 -m ./llama.cpp/models/collectivecognition-v1.1-mistral-7b.Q4_K_M.gguf --color -c 2048 --temp 0.7 --repeat_penalty 1.1 -n -1 -p "${prompt} . Eres un asistente de IA superinteligente desarrollado por Neuuni Universidad. Tu nombre es Nevil. Si no tienes conocimiento o informaci칩n sobre la consulta solicitada, informa que no tienes datos sobre esa consulta. No est치 permitido compartir informaci칩n falsa o enga침osa, informa que no tienes datos sobre esa consulta. No est치 permitido inventar informaci칩n.  \n USER: ${message} \n ASSISTANT: " -n 500`,
      (error, stdout, stderr) => {
        if (error) {
          console.error(`exec error: ${error}`);
          console.log("object");
          sendMessageWTyping({ text: "No pude procesar tu solicitud. Por favor ingrese una consulta mas corta 游뱅" }, to_phone);
          return;
        }
        //console.log(`stdout: ${stdout}`);
        //console.error(`stderr: ${stderr}`);

        // extract the message after "Assistant:"
        const regex = /ASSISTANT:(.*)/s;
        const match = regex.exec(stdout);
       
        /* Init two variables for the response */
        let response;
        let responseWithFormat;
        if (match && match[1]) {
          /* This variable contains the AI format (<|im_end|>), sometimes no.  */
          response = match[1].trim();
          
          /* Check if contain the AI format */
          if(wordsFoundInText(response.toString(), ['<|im_end|>'])) 
            responseWithFormat = response.split('<|im_end|>')[0];
          else 
            responseWithFormat = response;

        } else {
          response = 'No se pudo entender la respuesta del asistente';
        }
        console.log("THE PROCESS WAS SEND.");
        sendMessageWTyping({ text: responseWithFormat }, to_phone);
      }
  );
}